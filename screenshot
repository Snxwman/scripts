#!/usr/bin/env bash

# A wrapper script around a few screenshot utilities
# Dependencies: flameshot, slop, xdotool, notify-send

APPNAME="Screenshot script (${BASH_SOURCE[0]})"

screenshot_window_region() {
    # Gets the region of a window and feeds it to flameshot to mimic "window" screenshots.
    # Because slop retuns a region, not a true window, overlaping windows will still be visible.
    # Modified from: https://github.com/flameshot-org/flameshot/issues/273#issuecomment-1165360717

    # Color is the artix linux logo color
    REGION=$(slop --format "%wx%h+%x+%y" --color "0.06274,0.62745,0.8,0.66" --highlight)
    SLOP_EXIT="$?"

    if [ $SLOP_EXIT -eq 0 ]; then
        flameshot gui --region "$REGION" "$@"
    else
        echo "screenshot: Region selection failed. Slop exited with code $SLOP_EXIT" >&2
        notify-send \
            --app-name "$APPNAME" \
            --urgency critical \
            "Region selection failed" \
            "Slop failed with exit code $SLOP_EXIT"
    fi
}

screenshot_active_window_region() {
    # Not very accurate to actual window size
    eval $(xdotool getactivewindow getwindowgeometry --shell)
	REGION="${WIDTH}x${HEIGHT}+${X}+${Y}"

    flameshot gui --region "$REGION" "$@"
}

# Wrap the flameshot commands so they can be accessed through the same script
screenshot_selection() {
    flameshot gui "$@"
}

screenshot_all_monitors() {
    flameshot full "$@"
}

screenshot_monitor() {
    flameshot screen "$@"
}

screenshot_menu() {
    flameshot launcher "$@"
}

MODE="$1"; shift
case "$MODE" in
    "region"        ) screenshot_window_region "$@" ;;
    "active-region" ) screenshot_active_window_region "$@" ;;
    "select"        ) screenshot_selection "$@" ;;
    "monitor"       ) screenshot_monitor "$@" ;;
    "all-monitors"  ) screenshot_all_monitors "$@" ;;
    "menu"          ) screenshot_menu "$@" ;;
    * )
        echo "screenshot: Unknown mode: $MODE. Known modes: select, region,"
        notify-send \
            --app-name "$APPNAME" \
            --urgency critical \
            "Unknown mode: $MODE"
        ;;
esac
